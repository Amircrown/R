unlink("testdir", recursive = TRUE)
2
0
k
swirl(0)
install_from_swirl("Open Intro")
swirl()
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10, length=30)
my_seq <- seq(5,10,length=30)
my_seq
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,time=40)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10, by=0.5)
seq(5,10, length=30)
my_seq<-seq(5,10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2), times = 10)
rep(c(0,1,2), each = 10)
num_vact <- c(0.5,55,-10,6)
num_vect <- c(0.5,55,-10,6)
num_vect
tf <- num_vect < 1
tf
num_vect <= 6
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char)
paste(my_char,collapse = " ")
my_name <- c(my_char, "Amir")
my_name
paste (my_name,collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3,c("X","Y","Z"), sep = "")
paste(LETTERS, 1:4,sep = "-")
exit()
info()
bye(0)
bye()
ls()
rm(list="my_name")
ls()
rm(list=ls())
ls()
getwd()
dir()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
getwd()
setwd("C:/HDD/Drive G/Coursera/R/Assignment 1")
source('C:/HDD/Drive G/Coursera/R/Assignment 1/corr.R', echo=TRUE)
save.image("C:/HDD/Drive G/Coursera/R/Assignment 1/work1.RData")
cr
cr<-corr("specdata",1000)
getwd()
source("complete.R")
cr<-corr("specdata",1000)
cr
source('~/.active-rstudio-document', echo=TRUE)
cr<-corr("specdata",1000)
?cor
source('~/.active-rstudio-document', echo=TRUE)
cr<-corr("specdata",1000)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
cr<-corr("specdata",1000)
cr
source('~/.active-rstudio-document', echo=TRUE)
cr<-corr("specdata",100000)
cr
summary(cr)
cr<-corr("specdata",1000)
summary(cr)
source('~/.active-rstudio-document', echo=TRUE)
cr<-corr("specdata",1000)
cr
cr<-corr("specdata",100000)
cr
summary(cr)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
source('~/.active-rstudio-document', echo=TRUE)
cr<-corr("specdata",100000)
summary(cr)
length(c)
length(cr)
cr<-corr("specdata",1000)
cr
cr<-corr("specdata",150)
cr
head(cr)
submit()
submit()
submit()
submit()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
submit()
x<-c(NA,NA)
y<-c(NA,NA)
cor(x,y, use = "complete.obs" )
source('~/.active-rstudio-document', echo=TRUE)
cor(x,y, use = "na.or.complete" )
y<-c(NA,1)
x<-c(NA,5)
cor(x,y, use = "na.or.complete" )
x<-c(6,5)
y<-c(8,1)
cor(x,y, use = "na.or.complete" )
source('~/.active-rstudio-document', echo=TRUE)
cr<-corr("specdata",150)
?tryCatch
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
corr("specdata")
source('~/.active-rstudio-document', echo=TRUE)
corr("specdata")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
corr("specdata")
submit()
submit()
getwd()
getwd()
ls()
date()
x<- as date("1974-1-1")
x<- as.date("1974-1-1")
x<- as.Date("1974-1-1")
x
unclass(x)
x<-read.cdv("specdata//001.csv")
x<-read.csv("specdata//001.csv")
x
x$sulfate[sulfate>50]
x$sulfate["sulfate">50]
x$sulfate[>50]
x$sulfate[x>50]
x$sulfate["sulfate">50]
x$sulfate
x$sulfate["sulfate">50, na.rm()]
x$sulfate[!is.null("sulfate")]
x$sulfate[!is.null(sulfate)]
x$sulfate[!is.null(x$sulfate)]
x$sulfate[1:12]
is.null(x$sulfate)
complete(x)
complete(x$sulfate)
library(dats    ets)
library(datasets)
dara(iris)
data(iris)
?iris
m<data(iris)
m<-data(iris)
m
summary(m)
m
dni3 <- dimnames(iris3)
ii <- data.frame(matrix(aperm(iris3, c(1,3,2)), ncol = 4,
dimnames = list(NULL, sub(" L.",".Length",
sub(" W.",".Width", dni3[[2]])))),
Species = gl(3, 50, labels = sub("S", "s", sub("V", "v", dni3[[3]]))))
all.equal(ii, iris) # TRUE
ii
summaryii
summary(ii)
dni3 <- dimnames(iris3)
ii <- data.frame(matrix(aperm(iris3, c(1,3,2)), ncol = 4,
dimnames = list(NULL, sub(" L.",".Length",
sub(" W.",".Width", dni3[[2]])))),
Species = gl(3, 50, labels = sub("S", "s", sub("V", "v", dni3[[3]]))))
all.equal(ii, iris) # TRUE
rnorm(10)
list(c(1,2,3),c(4,5,6))
k<-list(c(1,2,3),c(4,5,6))
mean(k)
mean(k[1])
k[1]
mean(k[[1]])
lapply(c(1:4),runif)
lapply(c(1:4),runif(x))
x<-c(1:4)
lapply(x,runif(x))
?runif
runif(20)
runif
?iris
iris
iri[1:3]
iri[1:3,]
x<-iris[1:3,]
x
x<-subset(iris,Species = "virginica")
x
x[1:3,]
x<-subset(iris,Species = virginica)
x
x[1:3]
x[1:3,]
x<-subset(iris,Species == virginica)[1:3,]
x<-subset(iris,Species == "virginica)
x<-subset(iris,Species == "virginica")
x<-subset(iris,Species == "virginica")
x[1:5,]
x<-subset(iris,Species == "virginica")
x
mean(x[Sepal.Length,])
x[1:3,]
mean(x["Sepal.Length",])
x["Sepal.Length",]
x[,"Sepal.Length"]
mean(x[,"Sepal.Length"])
?apply
x
apply(iris[,1:4],2,mean)
apply(iris[,1:4],1,mean)
apply(iris[,1:4],2,mean)
mean(x[,"Sepal.Length"])
x
mean(iris[,"Sepal.Length"])
apply(iris[,1:4],2,mean)
x<-data(mtcars)
x
mtcars
?mtcars
?tapply
tapply(mtcars$mpg,mtcars$cyl,mean)
tapply(mtcars$cyl,mtcars$mpg,mean)
tapply(mtcars$mpg,mtcars$cyl,mean)
debug(ls)
ls
ls()
exit
end
q
m
getwin()
q
Exit()
undebug(ls)
q
undebug(ls)
ls()
mtcars
m<-mtcars[,-1]
m
m<-mtcars
m
apply(m,1,quantile,probs = c(0.25,0.75))
apply(m,2,quantile,probs = c(0.25,0.75))
apply(m,2,quantile,probs = c(0.01,0.25,0.75))
m
apply(m,2,quantile,probs = c(0.01,0.25,0.75))
data()
library('datasets')
a<-data(cars)
a
a
library(help = 'datasets')
library(MASS)
a<-data(cars)
a
cars
a
?data()
data()
cars
a
cars
library(datasets)
data(cars)
cars
data()
data(airquality)
airquality
head(airquality)
plot(airquality$Ozone~airquality$Temp,data = airquality)
plot(airquality$Ozone~airquality$Temp)
plot(airquality$Ozone~airquality$Temp)
lm(airquality$Ozone~airquality$Temp)
a<-lm(airquality$Ozone~airquality$Temp)
summary(a)
plot(a)
a<-lm(airquality$Ozone~airquality$Temp)
plot(airquality$Ozone~airquality$Temp+airquality$Solar.R)
plot(airquality$Ozone~airquality$Temp+airquality$Solar.R)
plot(airquality$Ozone~airquality$Temp+airquality$Solar.R)
a<-lm(airquality$Ozone~airquality$Temp)
b<-lm(airquality$Ozone~airquality$Solar.R)
aov(a,b)
aov(a)
plot(a,b)
plot(a)
m<- mean (airquality$Solar.R, na.rm = TRUE)
m
plot(airquality$Ozone~airquality$Solar.R)
m<- mean (airquality$Ozone, na.rm = TRUE)
abline(h = m)
plot(airquality$Ozone~airquality$Temp)
mean.temp(airquality$Ozone,na.rm = TRUE)
mean.temp<- mean(airquality$Ozone,na.rm = TRUE)
abline(h=mean.temp,col="green")
lm.temp = lm(data = airquality, Ozone~Temp)
lm.temp
abline(lm.temp,col = "red")
summary(lm.temp)
plot(lm.temp)
termplot(lm.temp)
summary(lm.temp)
cor(airquality$Ozone,airquality$Temp)
?cor
cor(airquality$Ozone,airquality$Temp, method ="kendall")
cor(airquality$Ozone~airquality$Temp, method ="kendall")
cor(airquality$Ozone, airquality$Solar.R, method ="kendall")
plot(cor(airquality$Ozone, airquality$Solar.R, method ="kendall"))
summary(cor(airquality$Ozone, airquality$Solar.R, method ="kendall"))
airquality
good <- complete.cases(airquality)
airquality[good,]
m<-airquality[good,]
m
cor(m$Ozone, m$Solar.R, method ="kendall")
0.24*0.24
summary(cor(airquality$Ozone, airquality$Solar.R, method ="kendall"))
summary(lm.temp)
cor(m$Ozone, m$Temp, method ="kendall")
0.586^2
head(airquality)
tapply(Solar.R, Month, data = airquality, mean)
tapply(Solar.R, airquality$Month, data = airquality, mean)
tapply(airquality$Solar.R, airquality$Month, mean)
tapply(airquality$Solar.R, airquality$Month, mean(na.rm = T))
tapply(c(airquality$Solar.R,na.rm = T), airquality$Month, mean)
tapply(airquality$Solar.R, airquality$Month, mean)
tapply(airquality$Solar.R, airquality$Month, mean, na.rm = T)
plot(Solar.R, airquality$Month)
plot(Solar.R~ airquality$Month)
plot(airquality$Solar.R~ airquality$Month)
cars
plot(airquality$Solar.R~ airquality$Month)
line(6,100)
?line
plot(cars)
?line
z <-line(cars)
abline(coef(z))
plot(airquality$Solar.R~ airquality$Month)
abline(coef(airquality$Solar.R~airquality$Month))
plot(airquality$Solar.R~ airquality$Ozone)
coef(airquality$Solar.R~ airquality$Ozone)
?coef
p
coef(airquality$Solar.R~ airquality$Ozone)
plot(airquality$Solar.R~ airquality$Ozone)
lm(airquality$Solar.R~ airquality$Ozone)
f<-lm(airquality$Solar.R~ airquality$Ozone)
abline(f,col = "ref")
abline(f,col = "red")
f<-lm(airquality$Solar.R~ airquality$Ozone*airquality$Wind)
abline(f,col = "red")
abline(f,col = "green")
plot.new
plot.new()
hist(airquality$Solar.R~airquality$Month)
hist(airquality$Solar.R,airquality$Month)
?hist
cl<-complete.cases(airquality)
mn <- airquality[cl,]
mn
mn
hist(mn$Solar.R,mn$Month)
hist(sum(mn$Solar).R,mn$Month)
hist(sum(mn$Solar.R),mn$Month)
hist(mn$Solar.R)
hist(mn$Month)
hist(mn$Wind)
hist(mn$Wind,col =" red")
mtcars
head(mtcars)
hist(mpg, data= mtcars)
hist(mtcars$mpg)
x<- data.frame(mtcars,mpg*6)
heaq(cars)
head(mtcars)
plot(mtcars$mpg)
labels(c(4,6,8))
plot(mtcars$mpg)
labels<-c(4,6,8)
mtcars[order(mpg,data=mtcars),]
mtcars[order(mtcars$mpg,data=mtcars),]
mtcars[order(mtcars$mpg),]
mtcars[order(mtcars$mpg,-1),]
mtcars[order(mtcars$mpg,1),]
mtcars[order(mtcars$mpg,2),]
mtcars[order(mtcars$mpg,),]
mtcars[order(mtcars$mpg,),]
mtcars[order(mtcars$mpg),]
?termplot
x<-lm(cars$speed~cars$dist)
plot(x)
x
summary(x)
plot.new()
line(x)
f<-predict(x)
f
line(f)
abline(f)
plot(f)
plot(cars)
abline(f)
abline(x)
abline(x,col="red")
x<-lm(cars$speed~cars$dist)
x
x<-lm(cars$dist~cars$dist)
x<-lm(cars$dist~cars$speed)
abline(x,col = "green")
x
summary(x)
x
source('~/.active-rstudio-document', echo=TRUE)
x
plo
x<-cars
plot(x)
corr(x)
corr(x$speed,x$dist)
x
corr(x$speed,x$dist, method ="kendall")
corr(x$speed,x$dist, method ="kendall")
cor(m$Ozone, m$Temp, method ="kendall")
p = cor(m$Ozone, m$Temp, method ="kendall")
summary)p
summary)p
summary(p)
aov(cars)
?aov
mtcars
names(mtcars)
k<-lm(mtcars$cyl ~ disp + hp + drat + wt,data= mtcars)
lm
k
summary(k)
head(mtcars)
aov(k)
p <- aov(k)
summary(p)
?t.test
t.test(mtcars$hp, mtcars$drat)
?DATA
?data
data()
?runif
dunif(5,0,3)
runif(10,0,6)
runif(100,0,6)
x<-runif(100,0,6)
y <- max(x)
y
dunif(x = 0.5)
dunif(x = 0.5)
dunif(x = 0.5)
dunif(x = 0.5, 3, 7)
dunif(x = 0.5, 1, 3)
dunif(x = 0.5, 1, 3)
x<- seq(0,6, length =200)
punif(x, 0, 6)
y<- punif(x, 0, 6)
plot(y~x, type="l")
y<- punif(x, -8, 16)
plot(y~x, type="l")
y<- punif(x, 2, 4)
plot(y~x, type="l")
y<- pnorm(x, 2, 4)
plot(y~x, type="l")
y<- pnorm(x, 0, 6)
plot(y~x, type="l")
x<- seq(0,6, length =200)
y<- pnorm(x)
y<- pnorm(x,0,1)
plot(y~x, type="l")
?pnorm
x<- seq(-3,3, length =200)
y<- pnorm(x,0,1)
plot(y~x, type="l")
?pnorm
